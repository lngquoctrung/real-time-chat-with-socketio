<!DOCTYPE html>
<html lang="vi">
    <head>
        <meta charset="UTF-8" />
        <title>Danh sách người dùng</title>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>

        <link rel="icon" type="image/png" href="https://chat-app.qctrung.site/public/images/icon.png"/>
        <meta property="og:title" content="Danh sách người dùng - Chat App">
        <meta property="og:description" content="Ứng dụng chat trực tuyến - Kết nối và trò chuyện với mọi người">
        <meta property="og:image" content="https://chat-app.qctrung.site/public/images/preview.png">
        <meta property="og:url" content="https://chat-app.qctrung.site">
        <meta property="og:type" content="website">

        <link rel="stylesheet" href="/public/css/index.css"/>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"/>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
    </head>

    <body>
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-12 col-lg-8 col-xl-7">
                    <div class="main-container">
                        <div class="header-section">
                            <div class="user-profile">
                                <div class="user-avatar">
                                    <%= locals.username ? locals.username.charAt(0).toUpperCase() : 'U' %>
                                </div>
                                <div class="user-details">
                                    <h4><%= locals.username %></h4>
                                    <p>Chào mừng trở lại!</p>
                                </div>
                            </div>
                            <button class="logout-btn" type="button" onclick="handleLogout()">
                                <i class="fas fa-sign-out-alt"></i> Đăng xuất
                            </button>
                        </div>

                        <div class="content-section">
                            <h2 class="section-title">Người dùng trực tuyến</h2>
                            
                            <div class="online-counter">
                                <span>Số người online: </span>
                                <span id="num-of-users" class="online-badge">0</span>
                            </div>

                            <div id="people" class="people-list"></div>
                        </div>
                    </div>

                    <div class="info-text">
                        <p style="margin-bottom: 8px;">
                            <strong>Hướng dẫn sử dụng:</strong>
                        </p>
                        <p style="margin-bottom: 8px;">
                            Danh sách cập nhật tự động khi có người dùng đăng nhập/đăng xuất
                        </p>
                        <p style="margin-bottom: 0;">
                            Chỉ có thể chat với người dùng có trạng thái "Đang rảnh"
                        </p>
                    </div>
                </div>
            </div>

            <input type="hidden" id="user-email" value="<%= locals.email %>" />

            <div id="online-notification" class="notification"></div>
            <div id="offline-notification" class="notification"></div>
        </div>

        <script>
            // GIỮ NGUYÊN SCRIPT CỦA BẠN Ở ĐÂY
            const socket = io();
            const email = document.querySelector('#user-email').value;
            const lastConnectionKey = 'last_connection';

            const handleLogout = async () => {
                const response = await fetch('/auth/logout', { method: 'POST' });
                if (response.status === 200 && response.ok) {
                    window.location.replace('/login');
                }
            };

            const displayMessage = (id, msg) => {
                const toastMsg = $(`#${id}`);
                toastMsg.html(msg);
                toastMsg.fadeIn(400);
                setTimeout(() => {
                    toastMsg.fadeOut(400);
                }, 3000);
            };

            const handleConnect = (user) => {
                const lastConnection = localStorage.getItem(lastConnectionKey);
                if (!lastConnection) {
                    const msg = `<strong>${user.username}</strong> vừa mới online`;
                    displayMessage('online-notification', msg);
                }
                localStorage.setItem(lastConnectionKey, Date.now().toString());
            };

            const handleDisconnect = (user) => {
                const msg = `<strong>${user.username}</strong> đã thoát khỏi ứng dụng`;
                displayMessage('offline-notification', msg);
                localStorage.removeItem(lastConnectionKey);
            };

            const displayUser = (user) => {
                const userDiv = $('<div></div>');
                userDiv.addClass(`user ${user.status !== 'online' ? 'offline' : ''}`.trim());
                userDiv.html(`
                    <div class="avatar">${user.username.charAt(0).toUpperCase()}</div>
                    <div class="user-info">
                        <div class="user-name">${user.username}</div>
                        <div class="online">
                            ${user.status === 'online' 
                                ? `Truy cập lúc: ${user.onlineAt}` 
                                : `Đăng xuất lúc: ${user.offlineAt}`}
                        </div>
                    </div>
                    <div class="status">
                        <div class="status-badge ${user.status === 'online' ? 'badge-success' : 'badge-warning'}">
                            ${user.status === 'online' ? 'Đang rảnh' : 'Đang bận'}
                        </div>
                    </div>
                `);
                
                if (user.status === 'online') {
                    userDiv.on('click', () => {
                        window.location.href = `/chat/${user.email}`;
                    });
                }
                $('#people').append(userDiv);
            };

            const handleDisplayUsers = (users) => {
                $('#people').empty();
                const otherUsers = users.filter(u => u.email !== email);
                const otherOnlineUsers = otherUsers.filter(u => u.status === 'online');
                $('#num-of-users').text(otherOnlineUsers.length);
                
                otherUsers.forEach(user => {
                    displayUser(user);
                });
            };

            $(document).ready(() => {
                $('#online-notification').hide();
                $('#offline-notification').hide();
                
                socket.on('user-connect', handleConnect);
                socket.on('user-disconnect', handleDisconnect);
                socket.on('users', handleDisplayUsers);
            });
        </script>
    </body>
</html>
